{"ast":null,"code":"var _jsxFileName = \"/Users/Lewamey/Desktop/Mod4_Project/project_management_frontend/src/containers/manager.js\";\nimport React from 'react'; // import Navbar from '../components/navbar';\n\nimport ManagerSidebar from './manager/ManagerSidebar';\nimport '../style/employee.css';\nimport '../style/manager.css';\nimport ManagerProjectList from './manager/ManagerProjectList';\n\nclass Manager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      manager_data: {},\n      loaded: false\n    };\n\n    this.getNewTask = newTaskData => {\n      let config = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(newTaskData)\n      };\n      fetch(\"http://localhost:3000/tasks\", config).then(rsp => rsp.json()).then(data => this.setState({\n        manager_data: data\n      }));\n    };\n\n    this.getNewProjectInfo = newProjectData => {\n      let config = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(newProjectData)\n      };\n      fetch(\"http://localhost:3000/projects\", config).then(rsp => rsp.json()).then(data => this.setState({\n        manager_data: data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.token) {\n      this.props.history.push('/');\n      return;\n    }\n\n    let config = {\n      headers: {\n        Authorization: localStorage.token\n      }\n    };\n    fetch(\"http://localhost:3000/managers/\".concat(this.props.match.params.username), config).then(res => res.json()).then(data => {\n      this.setState({\n        manager_data: data,\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return \"loading\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"employee-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-employee-sidebar-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ManagerSidebar, {\n      getNewProjectInfo: this.getNewProjectInfo,\n      manager: this.state.manager_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ManagerProjectList, {\n      getNewTask: this.getNewTask,\n      data: this.state.manager_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Manager;","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Mod4_Project/project_management_frontend/src/containers/manager.js"],"names":["React","ManagerSidebar","ManagerProjectList","Manager","Component","state","manager_data","loaded","getNewTask","newTaskData","config","method","headers","body","JSON","stringify","fetch","then","rsp","json","data","setState","getNewProjectInfo","newProjectData","componentDidMount","localStorage","token","props","history","push","Authorization","match","params","username","res","render"],"mappings":"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","sourcesContent":["import React from 'react'\n// import Navbar from '../components/navbar';\nimport ManagerSidebar from './manager/ManagerSidebar';\nimport  '../style/employee.css'\nimport  '../style/manager.css'\nimport ManagerProjectList from './manager/ManagerProjectList';\n\nclass Manager extends React.Component {\n\n  state = {\n    manager_data: {},\n    loaded: false\n  }\n\n  componentDidMount() {\n    if (!localStorage.token) {\n      this.props.history.push('/')\n      return\n    }\n    let config = {\n      headers: {\n        Authorization: localStorage.token\n      }\n    }\n    fetch(`http://localhost:3000/managers/${this.props.match.params.username}`, config)\n      .then(res => res.json())\n      .then(data => {\n          this.setState({manager_data: data, loaded: true})\n      })\n  }\n  getNewTask = (newTaskData) => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(newTaskData)\n    }\n    fetch(\"http://localhost:3000/tasks\", config)\n      .then(rsp => rsp.json())\n      .then(data => this.setState({\n        manager_data: data\n      }))\n  }\n  getNewProjectInfo = (newProjectData) => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(newProjectData)\n    }\n    fetch(\"http://localhost:3000/projects\", config)\n      .then(rsp => rsp.json())\n      .then(data => this.setState({\n        manager_data: data\n      }))\n  }\n  render() {\n    if (!this.state.loaded) {\n      return \"loading\"\n    }\n    return (\n      <div className=\"employee-container\">\n        <div className=\"container-employee-sidebar-project\">\n          <ManagerSidebar getNewProjectInfo={this.getNewProjectInfo} manager={this.state.manager_data}/>\n          <ManagerProjectList getNewTask={this.getNewTask} data={this.state.manager_data}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Manager\n"]},"metadata":{},"sourceType":"module"}